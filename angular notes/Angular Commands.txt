Angular npm i -g @angular/cli@latest
------

create project : ng new projectName 

				or

			ng new projectname --routing

project running : -ng serve --open

clear errors/warnings : -npm i --force

create a component : ng g c 'componentname'





folders
-------
.angular : config btwn angular app & CLI
.vscode : config btwn angular and vscode
node_modles : to store copies of external/3rd party libraries we install
assets : to store media files for your project




files
-----
.editorconfig : contains editors configurations.
.gitignore : contains files that are ignored while pushing into git.
angular.json : 




life-cycle of angular componenet
--------------------------------

constructor --> ngOnInit --> other methods





Data Binding Techniques in Angular(data sharing in components)
---------------------------------

html - view
ts - component

1. One Way Binding
------------------

	1.1 Component t0 view data sharing
		
		1.1.1 String Interpolation {{}}
		1.1.2 Property Binding []


	1.2 View to component data sharing

		1.2.1 event binding  (event)="method()"
		1.2.2 event binding using $ event  (event)=method($event)
		1.2.3 event binding with template rendering variable    #variable


2. Two Way Binding
------------------

	2.1 ngModel   [(ngModel)]="property"   FormsModule





Redirection In Angular
----------------------

Module  - AppRoutingModule.
Router  - A class used to redirect.
Methods - navigateByUrl


Dependency Injection
--------------------

To share datas between two classes

Inside the constructor

	access_specifier reference:className
	private/public


	reference.method()


Angular Services
----------------

to store datas and methods 
- all the components can access the datas and methods defined in service file easily

		
		-ng g s service_name

		Angular Directives - to manipulate DashboardComponent
------------------------------

 1.component Directives
 2.structural Directives  *ngFor
 3.attribute Directives [ngclass]

 
validation in angular
---------------------
form creation in angular

1.template driven form
2.model driven form 
class : formbuilder  
      
2.1-reactive form - to create model of form
reactive form contain group,array,control
-ReactiveFormsModule          -module
-FormBuilder                  -class used to create model form
-group                        -method to create model
       
       
localstrorage in angular
-----------------------
localstrorage.getItem()
localstrorage.setItem()
localstrorage.removeItem()

json-    stringify       parse


parent child components communâ€¦


@input() - parent to child data sharing 
@output() - child to parent data sharing
 

Event Creation In Angular
-------------------------

we can create our own events in angular projects

EventEmitter -class used to create userdefined events

               eventname=new eventEmitter{}
               emit{}  -  to define the working time / to start the event

Date and Time In Angular
------------------------

class  - Date


Angular Pipes
-------------

to convert datas into another format


lazy-loading
---------------------

provide less loading time for high traffic pages

ng g module module (moduename)--route (module name) --module app.module

json server
---------------------

1.install server

npm install --save json-server

2.run server in server file location
npx json-server --watch db.json --port 3000


Behaviour subject
----------------------------

to share data between modules
rxjs(react extension for js ) library of behaviour subject

rxjs is used to handle async implementation in angular

activated route in angular
----------------------------------

used to access data from url(access params) 

class    - Activatedroute
method   - params()  (its a asynchronous method)



